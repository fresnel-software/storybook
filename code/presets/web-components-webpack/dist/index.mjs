var o=(e=>typeof require!="undefined"?require:typeof Proxy!="undefined"?new Proxy(e,{get:(r,s)=>(typeof require!="undefined"?require:r)[s]}):e)(function(e){if(typeof require!="undefined")return require.apply(this,arguments);throw new Error('Dynamic require of "'+e+'" is not supported')});var p=e=>{let r=[...e.module?.rules||[],{test:[new RegExp("src(.*)\\.js$"),new RegExp("packages(\\/|\\\\)*(\\/|\\\\)src(\\/|\\\\)(.*)\\.js$"),new RegExp("node_modules(\\/|\\\\)lit-html(.*)\\.js$"),new RegExp("node_modules(\\/|\\\\)lit-element(.*)\\.js$"),new RegExp("node_modules(\\/|\\\\)@open-wc(.*)\\.js$"),new RegExp("node_modules(\\/|\\\\)@polymer(.*)\\.js$"),new RegExp("node_modules(\\/|\\\\)@vaadin(.*)\\.js$")],use:{loader:o.resolve("babel-loader"),options:{compact:!1,presets:[[o.resolve("@babel/preset-env"),{useBuiltIns:"entry",corejs:3,targets:{chrome:"100",esmodules:!0}}]],plugins:[o.resolve("@babel/plugin-syntax-dynamic-import"),o.resolve("@babel/plugin-syntax-import-meta"),[o.resolve("babel-plugin-bundled-import-meta"),{importStyle:"baseURI"}]]}}}];return e.module=e.module||{},e.module.rules=r,e};export{p as webpack};
