var t=(e=>typeof require!="undefined"?require:typeof Proxy!="undefined"?new Proxy(e,{get:(i,o)=>(typeof require!="undefined"?require:i)[o]}):e)(function(e){if(typeof require!="undefined")return require.apply(this,arguments);throw new Error('Dynamic require of "'+e+'" is not supported')});import a from"path";var c=e=>({...e,plugins:[[t.resolve("@babel/plugin-transform-react-jsx"),{importSource:"preact",runtime:"automatic"}],...e.plugins||[]]}),m=e=>{let o=(e.module?.rules||[]).find(r=>r.test.test?.("main.tsx"));return o.use=o.use.map(r=>{let p=r.options.plugins;return r.loader?.includes("babel-loader")&&(p=r.options.plugins.map(s=>s[0]?.includes?.("@babel/plugin-transform-react-jsx")?[s[0],{importSource:"preact",runtime:"automatic"}]:s)),{...r,options:{...r.options,plugins:p}}}),{...e,resolve:{...e.resolve,alias:{...e.resolve?.alias||{},react:a.dirname(t.resolve("preact/compat/package.json")),"react-dom/test-utils":a.dirname(t.resolve("preact/test-utils/package.json")),"react-dom":a.dirname(t.resolve("preact/compat/package.json")),"react/jsx-runtime":a.dirname(t.resolve("preact/jsx-runtime/package.json"))}}}};export{c as babelDefault,m as webpackFinal};
