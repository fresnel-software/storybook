var M=Object.create;var p=Object.defineProperty;var C=Object.getOwnPropertyDescriptor;var O=Object.getOwnPropertyNames;var D=Object.getPrototypeOf,k=Object.prototype.hasOwnProperty;var v=(t,r)=>{for(var e in r)p(t,e,{get:r[e],enumerable:!0})},d=(t,r,e,s)=>{if(r&&typeof r=="object"||typeof r=="function")for(let o of O(r))!k.call(t,o)&&o!==e&&p(t,o,{get:()=>r[o],enumerable:!(s=C(r,o))||s.enumerable});return t};var R=(t,r,e)=>(e=t!=null?M(D(t)):{},d(r||!t||!t.__esModule?p(e,"default",{value:t,enumerable:!0}):e,t)),U=t=>d(p({},"__esModule",{value:!0}),t);var J={};v(J,{parameters:()=>N,render:()=>g,renderToDOM:()=>h});module.exports=U(J);var l=R(require("global")),m=require("ts-dedent"),y=require("@storybook/preview-web"),{fetch:$,Node:I}=l.default,P=async(t,r,e,s)=>{let o=new URL(`${t}/${r}`);return o.search=new URLSearchParams({...s.globals,...e}).toString(),(await $(o)).text()},j=(t,r)=>{let e={...t};return Object.keys(r).forEach(s=>{let o=r[s],{control:n}=o,f=n&&n.type.toLowerCase(),i=e[s];switch(f){case"date":e[s]=new Date(i).toISOString();break;case"object":e[s]=JSON.stringify(i);break;default:}}),e},g=t=>{};async function h({id:t,title:r,name:e,showMain:s,showError:o,forceRemount:n,storyFn:f,storyContext:i,storyContext:{parameters:u,args:S,argTypes:w}},a){f();let T=j(S,w),{server:{url:b,id:x,fetchStoryHtml:L=P,params:A}}=u,F=x||t,H={...A,...T},c=await L(b,F,H,i);if(s(),typeof c=="string")a.innerHTML=c,(0,y.simulatePageLoad)(a);else if(c instanceof I){if(a.firstChild===c&&n===!1)return;a.innerHTML="",a.appendChild(c),(0,y.simulateDOMContentLoaded)()}else o({title:`Expecting an HTML snippet or DOM node from the story: "${e}" of "${r}".`,description:m.dedent`
        Did you forget to return the HTML snippet from the story?
        Use "() => <your snippet or node>" or when defining the story.
      `})}var N={framework:"server"};0&&(module.exports={parameters,render,renderToDOM});
